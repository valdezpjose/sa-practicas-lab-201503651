[{"D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\index.js":"1","D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\App.js":"2","D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\components\\users\\Dashboard.js":"3","D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\components\\users\\Form.js":"4","D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\components\\users\\Users.js":"5","D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\actions\\users.js":"6","D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\actions\\types.js":"7","D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\store.js":"8","D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\reducers\\index.js":"9","D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\reducers\\users.js":"10"},{"size":199,"mtime":1612198855440,"results":"11","hashOfConfig":"12"},{"size":611,"mtime":1612236953699,"results":"13","hashOfConfig":"12"},{"size":252,"mtime":1612201575769,"results":"14","hashOfConfig":"12"},{"size":7392,"mtime":1612485510334,"results":"15","hashOfConfig":"12"},{"size":4646,"mtime":1612481554335,"results":"16","hashOfConfig":"12"},{"size":2826,"mtime":1612485121492,"results":"17","hashOfConfig":"12"},{"size":158,"mtime":1612477777957,"results":"18","hashOfConfig":"12"},{"size":401,"mtime":1612233922607,"results":"19","hashOfConfig":"12"},{"size":120,"mtime":1612232644184,"results":"20","hashOfConfig":"12"},{"size":606,"mtime":1612485136559,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1qthbm6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\index.js",[],["46","47"],"D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\App.js",[],"D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\components\\users\\Dashboard.js",[],"D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\components\\users\\Form.js",["48"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { postUser, updateUser } from '../../actions/users';\r\n\r\n\r\nexport class Form extends Component {\r\n    static propTypes = {\r\n        postUser: PropTypes.func.isRequired,\r\n        updateUser: PropTypes.func.isRequired\r\n    }\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        gender: 'Male',\r\n        status: 'Active',\r\n        id: 0,\r\n        updated_at: \"\",\r\n        created_at: \"\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    updateUsers() {\r\n        const { name, email, gender, status } = this.state\r\n        const id = this.state.id\r\n        this.props.updateUser({ name, email, gender, status },id)\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { name, email, gender, status } = this.state\r\n        this.props.postUser({ name, email, gender, status })\r\n        const lastUser = JSON.parse(sessionStorage.getItem(\"lastUser\"))\r\n        console.log(lastUser)\r\n        if (lastUser.code == 201) {\r\n            this.setState({\r\n                name: lastUser.data.name,\r\n                email: lastUser.data.email,\r\n                gender: lastUser.data.gender,\r\n                status: lastUser.data.status,\r\n                id: lastUser.data.id,\r\n                updated_at: lastUser.data.updated_at,\r\n                created_at: lastUser.data.created_at,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                name: '',\r\n                email: '',\r\n                gender: 'Male',\r\n                status: 'Active',\r\n                id: 0,\r\n                updated_at: \"\",\r\n                created_at: \"\"\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { id, name, email, gender, status } = this.state;\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card card-body mt-4 mb-4\">\r\n                            <h2>Agregar usuarios</h2>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label>Id (Solamente para modificar)</label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"id\"\r\n                                        onChange={this.onChange}\r\n                                        value={id}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Nombre</label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Email</label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"email\"\r\n                                        onChange={this.onChange}\r\n                                        value={email}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Genero</label>\r\n                                    <select className=\"form-control\" name=\"gender\" onChange={this.onChange} value={gender}>\r\n                                        <option value=\"Male\">Masculino</option>\r\n                                        <option value=\"Female\">Femenino</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Estado</label>\r\n                                    <select className=\"form-control\" name=\"status\" onChange={this.onChange} value={status}>\r\n                                        <option value=\"Active\">Acitvo</option>\r\n                                        <option value=\"Inactive\">Inactivo</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className='container'>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm\">\r\n                                            <div className=\"form-group\">\r\n                                                <button type=\"submit\" className=\"btn btn-primary\">\r\n                                                    Agregar\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <button onClick={() => this.updateUsers()}  className=\"btn btn-primary\">\r\n                                Modificar\r\n                           </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <br />\r\n                        <h1>Datos ultimo usuario insertado</h1>\r\n                        <table className=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Nombre</th>\r\n                                    <th>Email</th>\r\n                                    <th>Estado</th>\r\n                                    <th>Genero</th>\r\n                                    <th>Creado</th>\r\n                                    <th>Actualizado</th>\r\n                                    <th />\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr key={this.state.id}>\r\n                                    <td>{this.state.id}</td>\r\n                                    <td>{this.state.name}</td>\r\n                                    <td>{this.state.email}</td>\r\n                                    <td>{this.state.status}</td>\r\n                                    <td>{this.state.gender}</td>\r\n                                    <td>{this.state.created_at}</td>\r\n                                    <td>{this.state.updated_at}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { postUser, updateUser })(Form);\r\n","D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\components\\users\\Users.js",[],"D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\actions\\users.js",["49"],"import axios from 'axios';\r\n\r\nimport {GET_USER,POST_USER,DELETE_USER,PATCH_USER} from './types';\r\n\r\nexport const tokenConfig = () => {\r\n \r\n    // Headers\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization':\"Bearer c9ab8c3a602403db79638ff90f795fb6d483d9ff62659e20a37295c7cbdb7f01\"\r\n      },\r\n    };\r\n\r\n\r\n    return config;\r\n};\r\n\r\n// GET USER\r\nexport const getUser = (id) => (dispatch) => {\r\n    axios.get(`https://gorest.co.in/public-api/users/${id}/`,tokenConfig())\r\n        .then(res => {\r\n            if(res.data.code == 200){\r\n                dispatch({\r\n                    type: GET_USER,\r\n                    payload: res.data.data\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: GET_USER,\r\n                    payload: {\r\n                        created_at: \"No existe\",\r\n                        email: \"No existe\",\r\n                        gender: \"No existe\",\r\n                        id: 0,\r\n                        name: \"No existe\",\r\n                        status: \"No existe\",\r\n                        updated_at: \"No existe\"\r\n                    }\r\n                }); \r\n            }           \r\n        }).catch(err => console.log(err));\r\n};\r\n\r\n\r\n// delete new user\r\nexport const deleteUser = (id) => (dispatch) => {\r\n    axios.delete(`https://gorest.co.in/public-api/users/${id}/`,tokenConfig())\r\n        .then(res => {\r\n            console.log(res.data);\r\n            dispatch({\r\n                type: DELETE_USER,\r\n                payload: {\r\n                    created_at: \"No existe\",\r\n                    email: \"No existe\",\r\n                    gender: \"No existe\",\r\n                    id: 0,\r\n                    name: \"No existe\",\r\n                    status: \"No existe\",\r\n                    updated_at: \"No existe\"\r\n                }\r\n            });          \r\n        }).catch(err => console.log(err));\r\n};\r\n\r\n// add new user\r\n\r\nexport const postUser = user =>  (dispatch) => {\r\n    axios.post('https://gorest.co.in/public-api/users', user ,tokenConfig())\r\n        .then(res => {\r\n            console.log(res.data)\r\n            sessionStorage.setItem(\"lastUser\",JSON.stringify(res.data))  \r\n            dispatch({\r\n                type: POST_USER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err));\r\n};\r\n\r\nexport const updateUser = (user,id) =>  (dispatch) => {\r\n    axios.patch(`https://gorest.co.in/public-api/users/${id}/`, user ,tokenConfig())\r\n        .then(res => {\r\n            console.log(res.data)\r\n            sessionStorage.setItem(\"lastUser\",JSON.stringify(res.data))  \r\n            dispatch({\r\n                type: PATCH_USER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err));\r\n};\r\n","D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\actions\\types.js",[],"D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\store.js",[],"D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\reducers\\index.js",[],"D:\\Universidad\\Software Avanzado\\Practica Laboratorio\\practica1\\src\\reducers\\users.js",["50"],"import {POST_USER, GET_USER, PATCH_USER, DELETE_USER} from '../actions/types';\r\n\r\nconst initialState = {\r\n    users: []\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_USER:\r\n        case DELETE_USER:\r\n            return{\r\n                ...state, \r\n                users: action.payload\r\n            };\r\n        case POST_USER:\r\n        case PATCH_USER:\r\n                return{\r\n                    ...state,\r\n                    users: [...state.users, action.payload]\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":38,"column":27,"nodeType":"57","messageId":"58","endLine":38,"endColumn":29},{"ruleId":"55","severity":1,"message":"56","line":23,"column":30,"nodeType":"57","messageId":"58","endLine":23,"endColumn":32},{"ruleId":"59","severity":1,"message":"60","line":7,"column":1,"nodeType":"61","endLine":24,"endColumn":2},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]